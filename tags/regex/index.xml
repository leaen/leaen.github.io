<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Regex on Moss&#39; Blog</title>
    <link>http://banay.me/tags/regex/</link>
    <description>Recent content in Regex on Moss&#39; Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 08 Aug 2018 21:33:00 +1000</lastBuildDate>
    
	<atom:link href="http://banay.me/tags/regex/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Week 3 Lecture 1 - Regular expressions</title>
      <link>http://banay.me/post/regular-expressions/</link>
      <pubDate>Wed, 08 Aug 2018 21:33:00 +1000</pubDate>
      
      <guid>http://banay.me/post/regular-expressions/</guid>
      <description>Groupings Suppose we have the disjunction of a number of regular expressions, and we wish to further match another disjunction of other regular expressions. We can write this by grouping the disjunctions within brackets, then concatenating the &amp;ldquo;grouped&amp;rdquo; disjunctions.
\[ (ab \cup ba)(e \cup g) \Rightarrow { abe, abg, bae, bag } \]
Infinite and finite languages It&amp;rsquo;s straightforward to show that all languages with a finite number of words are representable as regular expressions since the disjunction of all words in the language is a valid and finite regular expression that captures the language.</description>
    </item>
    
  </channel>
</rss>